# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-06-26 13:52
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Apps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='应用名称')),
                ('version', models.CharField(blank=True, max_length=64, null=True, verbose_name='应用版本')),
                ('ports', models.CharField(blank=True, max_length=128, null=True, verbose_name='端口号')),
                ('ssl', models.CharField(blank=True, max_length=32, null=True, verbose_name='SSL')),
                ('certif', models.FileField(blank=True, null=True, upload_to='', verbose_name='证书')),
                ('domain', models.CharField(blank=True, max_length=128, null=True, verbose_name='域名')),
                ('data', models.DateTimeField(auto_now_add=True, verbose_name='日期')),
            ],
            options={
                'verbose_name': 'Apps',
                'verbose_name_plural': 'Apps',
            },
        ),
        migrations.CreateModel(
            name='Bonding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(blank=True, max_length=16, null=True, verbose_name='设备')),
                ('model', models.SmallIntegerField(choices=[(0, 'Round-robin policy(平衡抡循环策略'), (1, 'Active-backup policy(主-备份策略)'), (2, 'XOR policy(平衡策略)'), (3, 'broadcast(广播策略)'), (4, 'Dynamic link aggregation(IEEE802.3ad 动态链接聚合)'), (5, 'Adaptive transmit load balancing(适配器传输负载均衡)'), (6, 'Adaptive load balancing(适配器适应性负载均衡)')], default=0, verbose_name='Bonding模式')),
                ('ipaddress1', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址1')),
                ('ipaddress2', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址2')),
                ('ipaddress3', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址3')),
                ('ipaddress4', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址4')),
            ],
            options={
                'verbose_name': 'Bonding',
                'verbose_name_plural': 'Bonding',
            },
        ),
        migrations.CreateModel(
            name='Cabint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=32, null=True, verbose_name='编号')),
                ('size', models.IntegerField(verbose_name='容量')),
                ('useposition', models.SlugField(blank=True, default=0, verbose_name='已用高度')),
                ('room_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='机房编号')),
            ],
            options={
                'verbose_name': '机柜',
                'verbose_name_plural': '机柜',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='厂商')),
                ('model', models.CharField(blank=True, max_length=64, null=True, unique=True, verbose_name='型号')),
                ('types', models.SmallIntegerField(choices=[(0, '服务器'), (1, '网络设备'), (2, 'CPU'), (3, '内存'), (4, '硬盘')], default=0, verbose_name='设备类型')),
                ('height', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(42), django.core.validators.MinValueValidator(1)], verbose_name='设备高度')),
            ],
            options={
                'verbose_name': '厂商',
                'verbose_name_plural': '厂商',
            },
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kernel', models.IntegerField(verbose_name='核数')),
                ('frequency', models.CharField(blank=True, max_length=12, null=True, verbose_name='主频')),
                ('counts', models.IntegerField(blank=True, null=True, verbose_name='数量')),
            ],
            options={
                'verbose_name': 'CPU',
                'verbose_name_plural': 'CPU',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sn', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('name', models.CharField(max_length=32, unique=True)),
                ('types', models.SmallIntegerField(choices=[(0, '交换机'), (1, '路由器'), (2, '防火墙'), (3, 'IDS/IPS'), (4, 'WAF'), (5, 'DDOS防火墙')], default=0, verbose_name='设备类型')),
                ('ipaddress', models.GenericIPAddressField(unique=True, verbose_name='IP地址')),
                ('position', models.IntegerField(blank=True, default=1, null=True, unique=True, validators=[django.core.validators.MaxValueValidator(42), django.core.validators.MinValueValidator(1)], verbose_name='机柜位置')),
                ('device_statuses', models.SmallIntegerField(choices=[(0, '已启用'), (1, '未启用'), (2, '故障'), (3, '下线')], default=0, verbose_name='设备状态')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='上线时间')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='下线时间')),
                ('contacts', models.CharField(blank=True, max_length=32, null=True, verbose_name='负责人')),
                ('cabint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='cmdbServer.Cabint', verbose_name='机柜')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='cmdbServer.Company', verbose_name='型号')),
            ],
            options={
                'verbose_name': '网络设备',
                'verbose_name_plural': '网络设备',
            },
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('types', models.SmallIntegerField(blank=True, choices=[(0, 'SATA硬盘'), (1, 'SCSI硬盘'), (2, 'SAS硬盘'), (3, 'SSD硬盘')], default=0, null=True, verbose_name='磁盘类型')),
                ('size', models.CharField(max_length=32, verbose_name='磁盘容量')),
                ('count', models.IntegerField(blank=True, null=True, verbose_name='磁盘数量')),
                ('status', models.SmallIntegerField(choices=[(0, '已启用'), (1, '故障'), (2, '已下线'), (3, '未使用'), (4, '已更换'), (5, 'READ')], default=0, verbose_name='状态')),
                ('remarks', models.CharField(blank=True, max_length=200, null=True, verbose_name='备注')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disks', to='cmdbServer.Company', verbose_name='型号')),
            ],
            options={
                'verbose_name': '磁盘',
                'verbose_name_plural': '磁盘',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='组')),
            ],
            options={
                'verbose_name': '设备组',
                'verbose_name_plural': '设备组',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='机房名称')),
                ('address', models.CharField(max_length=200, verbose_name='机房地址')),
                ('contacts', models.CharField(blank=True, max_length=32, null=True, verbose_name='机房联系组')),
                ('phone', models.CharField(blank=True, max_length=12, null=True, verbose_name='联系电话')),
                ('remarks', models.CharField(blank=True, max_length=200, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '机房信息',
                'verbose_name_plural': '机房信息',
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=32)),
                ('action', models.CharField(max_length=32)),
                ('content', django.contrib.postgres.fields.jsonb.JSONField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'verbose_name': '日志',
                'verbose_name_plural': '日志',
            },
        ),
        migrations.CreateModel(
            name='Monitors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_user', models.CharField(blank=True, max_length=64, null=True, verbose_name='用户使用')),
                ('cpu_system', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统使用')),
                ('memory', models.CharField(blank=True, max_length=64, null=True, verbose_name='内存使用率')),
                ('disk', models.CharField(blank=True, max_length=64, null=True, verbose_name='磁盘使用率')),
                ('network', models.CharField(blank=True, max_length=64, null=True, verbose_name='网络')),
                ('data', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '资源使用率',
                'verbose_name_plural': '资源使用率',
            },
        ),
        migrations.CreateModel(
            name='Nic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('ipaddress', models.GenericIPAddressField(blank=True, null=True, unique=True, verbose_name='IP地址')),
                ('mac_address', models.CharField(blank=True, max_length=32, null=True, verbose_name='MAC地址')),
                ('speed', models.SmallIntegerField(choices=[(0, '万兆'), (1, '千兆'), (2, '百兆')], default=0, verbose_name='速率')),
                ('types', models.SmallIntegerField(choices=[(0, '服务器'), (1, '网络设备')], default=0, verbose_name='类型')),
                ('remarks', models.CharField(blank=True, max_length=200, null=True, verbose_name='备注')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nics', to='cmdbServer.Company', verbose_name='型号')),
            ],
            options={
                'verbose_name': '网卡',
                'verbose_name_plural': '网卡',
            },
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SmallIntegerField(choices=[(0, 'VLAN'), (1, 'TRUNK'), (2, 'RIP'), (3, 'OSPF'), (4, 'IBGP'), (5, 'EBGP'), (6, 'BIND')], default=0, verbose_name='协议类型')),
                ('number', models.CharField(default='VLAN1', max_length=8, verbose_name='协议号')),
                ('ipaddress', models.GenericIPAddressField(blank=True, null=True, verbose_name='协议IP')),
                ('port_range', models.CharField(default='1-4', max_length=8, verbose_name='端口范围')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='protocols', to='cmdbServer.Device')),
            ],
            options={
                'verbose_name': '协议',
                'verbose_name_plural': '协议',
            },
        ),
        migrations.CreateModel(
            name='Ram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField(default='32', verbose_name='运行内存')),
                ('count', models.IntegerField(default=1, verbose_name='数量')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rams', to='cmdbServer.Company', verbose_name='型号')),
            ],
            options={
                'verbose_name': '内存',
                'verbose_name_plural': '内存',
            },
        ),
        migrations.CreateModel(
            name='Servers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('types', models.SmallIntegerField(choices=[(0, '机架'), (1, '塔式'), (2, '小型机'), (3, '刀片')], default=0, verbose_name='服务器类型')),
                ('position', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(42), django.core.validators.MinValueValidator(1)], verbose_name='机柜位置')),
                ('hostname', models.CharField(max_length=64, unique=True, verbose_name='主机名')),
                ('ipaddress', models.GenericIPAddressField(unique=True, verbose_name='管理地址')),
                ('system', models.CharField(blank=True, max_length=32, null=True, verbose_name='操作系统')),
                ('version', models.CharField(blank=True, max_length=32, null=True, verbose_name='系统版本号')),
                ('status', models.SmallIntegerField(choices=[(0, '已启用'), (1, '未启用'), (2, '故障'), (3, '下线')], default=0, verbose_name='主机状态')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='上线时间')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='下线时间')),
                ('user', models.CharField(blank=True, max_length=32, null=True, verbose_name='用户名')),
                ('password', models.CharField(blank=True, max_length=256, null=True, verbose_name='密码')),
                ('contacts', models.CharField(blank=True, max_length=32, null=True, verbose_name='负责人')),
                ('cabint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='cmdbServer.Cabint', verbose_name='机柜')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='cmdbServer.Company', verbose_name='型号')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='cmdbServer.Group', verbose_name='服务器组')),
                ('vlan', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='cmdbServer.Protocol', verbose_name='管理VLAN')),
            ],
            options={
                'verbose_name': '服务器',
                'verbose_name_plural': '服务器',
            },
        ),
        migrations.CreateModel(
            name='Warranty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=200, unique=True, verbose_name='质保商')),
                ('start_date', models.DateTimeField(verbose_name='质保起始时间')),
                ('end_date', models.DateTimeField(verbose_name='质保结束时间')),
            ],
            options={
                'verbose_name': '质保信息',
                'verbose_name_plural': '质保信息',
            },
        ),
        migrations.AddField(
            model_name='servers',
            name='warranty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='cmdbServer.Warranty', verbose_name='质保时间'),
        ),
        migrations.AddField(
            model_name='ram',
            name='server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rams', to='cmdbServer.Servers'),
        ),
        migrations.AddField(
            model_name='nic',
            name='protocol',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nics', to='cmdbServer.Protocol', verbose_name='VLAN'),
        ),
        migrations.AddField(
            model_name='nic',
            name='server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nics', to='cmdbServer.Servers'),
        ),
        migrations.AddField(
            model_name='monitors',
            name='host',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='monitor', to='cmdbServer.Servers'),
        ),
        migrations.AddField(
            model_name='disk',
            name='server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disks', to='cmdbServer.Servers'),
        ),
        migrations.AddField(
            model_name='device',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device', to='cmdbServer.Group', verbose_name='设备组'),
        ),
        migrations.AddField(
            model_name='device',
            name='warranty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device', to='cmdbServer.Warranty', verbose_name='质保时间'),
        ),
        migrations.AddField(
            model_name='cpu',
            name='server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cpus', to='cmdbServer.Servers'),
        ),
        migrations.AddField(
            model_name='cabint',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cabintd', to='cmdbServer.IDC'),
        ),
        migrations.AddField(
            model_name='bonding',
            name='nic',
            field=models.ManyToManyField(related_name='bonding', to='cmdbServer.Nic', verbose_name='网卡'),
        ),
        migrations.AddField(
            model_name='apps',
            name='host',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='apps', to='cmdbServer.Servers'),
        ),
        migrations.AlterUniqueTogether(
            name='servers',
            unique_together=set([('cabint', 'position')]),
        ),
        migrations.AlterUniqueTogether(
            name='cabint',
            unique_together=set([('number', 'room_number', 'idc')]),
        ),
        migrations.AlterUniqueTogether(
            name='bonding',
            unique_together=set([('ipaddress1', 'ipaddress2', 'ipaddress3', 'ipaddress4')]),
        ),
    ]
